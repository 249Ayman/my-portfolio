---
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"posts">;
  index: number;
}

const { post, index } = Astro.props;

const formatDate = (date: Date) =>
  date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
---

<article
  class={`group flex flex-col md:flex-row gap-8 ${
    index % 2 === 1 ? "md:flex-row-reverse" : ""
  }`}
>
  <div class="md:w-2/5 overflow-hidden">
    <a href={`/posts/${post.slug}`} class="block aspect-[4/3] relative">
      <img
        src={index % 2 === 0
          ? "https://images.unsplash.com/photo-1461749280684-dccba630e2f6?q=80&w=1469&auto=format&fit=crop"
          : "https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&w=1472&auto=format&fit=crop"}
        alt={post.data.title}
        class="w-full h-full object-cover transition duration-500 group-hover:scale-105 dark:brightness-90"
      />
    </a>
  </div>

  <div class="md:w-3/5 flex flex-col justify-center">
    <div class="flex flex-wrap gap-2 mb-4">
      {
        post.data.tags?.map((tag) => (
          <span class="text-xs px-3 py-1.5 border bg-tg-bg border-tag-border text-tag-text hover:bg-tag-bg-hover transition-colors cursor-pointer">
            {tag}
          </span>
        ))
      }
    </div>

    <div
      class="flex flex-col sm:flex-row sm:items-center gap-2 text-sm text-muted-foreground/90"
    >
      <time class="flex items-center gap-2">
        <span class="icon-[ph--calendar-light] size-4 opacity-80"></span>
        {formatDate(post.data.pubDate)}
      </time>

      {
        post.data.updatedDate && (
          <time class="flex items-center gap-2">
            <span class="icon-[ph--clock-clockwise-light] size-4 opacity-80" />
            {formatDate(post.data.updatedDate)}
          </time>
        )
      }
    </div>

    <a href={`/posts/${post.slug}`} class="mt-3 group/title">
      <h2
        class="text-2xl font-medium transition-colors group-hover/title:text-primary"
      >
        {post.data.title}
      </h2>
    </a>

    {
      post.data.description && (
        <p class="text-muted-foreground/80 mt-3 line-clamp-2 text-sm leading-relaxed">
          {post.data.description}
        </p>
      )
    }

    <div class="h-px w-full bg-border/60 my-6"></div>

    <a
      href={`/posts/${post.slug}`}
      class="inline-flex items-center gap-2 text-sm font-medium text-foreground/90 hover:text-primary transition-colors group/read"
    >
      Read More
      <span
        class="icon-[ph--arrow-right-light] size-4 transition-transform group-hover/read:translate-x-1"
      ></span>
    </a>
  </div>
</article>
