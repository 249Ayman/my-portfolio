---
import { formatDate } from '~/lib/utils'
import PostTag from '~/components/ui/PostTag.astro'
import type { CardProps } from './PostCardList.astro'

interface Props extends CardProps {}

const { post }: Props = Astro.props
---

<article class="group relative pl-10">
  <div class="absolute left-0 top-0 h-full flex flex-col items-center">
    <div
      class="h-3 w-3 rounded-full bg-primary/20 group-hover:bg-primary transition-colors z-10 mt-[3px] shadow-[0_0_0_2px_rgba(59,130,246,0.1)] group-hover:shadow-[0_0_0_4px_rgba(59,130,246,0.2)]"
    >
    </div>
    <div class="flex-1 w-0.5 bg-gradient-to-b from-transparent via-muted-foreground/20 to-transparent"></div>
  </div>

  <div class="pb-10 group-last:pb-0">
    <div class="flex items-start">
      <time class="block text-sm text-muted-foreground mb-3 font-medium flex-1">
        {formatDate(post.data.pubDate)}
        {
          post.data.updatedDate && (
            <span class="ml-2 text-xs text-muted-foreground/60">(Updated on {formatDate(post.data.updatedDate)})</span>
          )
        }
      </time>
    </div>

    <a href={`/posts/${post.slug}`} class="block">
      <h2 class="text-xl font-semibold text-foreground group-hover:text-primary transition-colors">
        {post.data.title}
      </h2>
      {post.data.description && <p class="mt-3 text-sm text-muted-foreground/80 line-clamp-2 leading-relaxed">{post.data.description}</p>}
    </a>

    {
      post.data.tags?.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {post.data.tags.map((tag) => (
            <PostTag tag={tag} />
          ))}
        </div>
      )
    }
  </div>
</article>
