---
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { POSTS_CONFIG } from '~/config'
import { postsSort } from '~/lib/utils'
import Layout from '~/layouts/Layout.astro'
import Pagination from '~/components/Pagination.astro'
import PostCardList from '~/components/postCard/PostCardList.astro'

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await getCollection('posts')
  const sortedPosts = postsSort(allPosts)
  const uniqueTags = [...new Set(sortedPosts.flatMap((post) => post.data.tags || []))]

  return uniqueTags
    .map((tag) => {
      const tagPosts = sortedPosts.filter((post) => post.data.tags?.includes(tag))
      return paginate(tagPosts, {
        params: { tag },
        props: { tag },
        pageSize: POSTS_CONFIG.tagsPageConfig.size,
      })
    })
    .flat()
}

interface Props {
  page: Page<CollectionEntry<'posts'>>
  tag: string
}

const { page, tag } = Astro.props
const description = `Posts with the tag #${tag}`
---

<Layout title={`#${tag}`} {description}>
  <div class="fullPage relative z-[1] py-8 pb-10 px-8">
    <h1 class="tracking-tight text-5xl bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent pb-1.5">
      #{tag}
    </h1>
    <div class="pro text-muted-foreground text-balance">
      <p class="mt-2">Found {page.total} related articles</p>
    </div>

    <div class="fade-up mt-8">
      <PostCardList posts={page.data} type={POSTS_CONFIG.tagsPageConfig.type} />
    </div>

    <Pagination {page} baseUrl={`/tags/${tag}`} />
  </div>
</Layout>
