---
import { getCollection } from 'astro:content'
import { postsSort } from '~/lib/utils'
import Layout from '~/layouts/Layout.astro'
import NoImageLayout from '~/components/post-layouts/NoImageLayout.astro'
import HorizontalImageLayout from '~/components/post-layouts/HorizontalImageLayout.astro'
import VerticalImageLayout from '~/components/post-layouts/VerticalImageLayout.astro'
import PostNavigation from '~/components/PostNavigation.astro'
import PostFeatures from '~/components/toc/PostFeatures.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  const sortedPosts = postsSort(posts)

  return sortedPosts.map((post, index) => ({
    params: { slug: post.slug },
    props: {
      post,
      posts: sortedPosts,
      prev: index + 1 < sortedPosts.length ? sortedPosts[index + 1] : null,
      next: index > 0 ? sortedPosts[index - 1] : null,
    },
  }))
}

const { post, posts, prev, next } = Astro.props
const { data: frontmatter } = post
const { Content, headings, remarkPluginFrontmatter } = await post.render()
// 检查文章是否有封面图
const hasImage = frontmatter.heroImage || false
// 判断封面图是否为垂直布局（3:4 比例）
const isVertical = frontmatter.heroImageAspectRatio === '3/4'
// 根据封面图状态选择对应的布局组件：
const PostLayout = !hasImage ? NoImageLayout : isVertical ? VerticalImageLayout : HorizontalImageLayout
---

<Layout title={frontmatter.title} description={frontmatter.description || frontmatter.title} image={frontmatter.ogImage}>
  <div class="fullPage relative">
    <PostLayout {frontmatter} minutesRead={remarkPluginFrontmatter.minutesRead}>
      <Content />
      <PostNavigation {prev} {next} />
    </PostLayout>
    <PostFeatures {post} {posts} {headings} />
  </div>
</Layout>
